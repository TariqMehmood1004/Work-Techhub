
CREATE DATABASE KICS;

CREATE TABLE ROLES (
	ROLES_ID INT NOT NULL PRIMARY KEY IDENTITY (1, 1),
	ROLES_NAMES NVARCHAR(MAX) NOT NULL,
	ROLES_DESCRIPTION NVARCHAR(MAX) NOT NULL,
	ROLES_CREATED_BY NVARCHAR(MAX) NOT NULL,
	ROLES_CREATED_DATE NVARCHAR(MAX) NOT NULL,
);

INSERT INTO ROLES VALUES ('Admin', 'This is an admin.', 'Admin', '31/10/2023');
INSERT INTO ROLES VALUES ('Instructor/Professor', 'This is a Professor.', 'Admin', '01/11/2023');
INSERT INTO ROLES VALUES ('Teacher', 'This is a teacher.', 'Admin', '01/11/2023');


CREATE TABLE USERS (
	USERS_ID INT NOT NULL PRIMARY KEY IDENTITY (1, 1),
	USERS_USERNAME NVARCHAR(MAX) NOT NULL,
	USERS_CNIC NVARCHAR(20) UNIQUE NOT NULL,
	USERS_PASSWORD NVARCHAR(MAX) NOT NULL,
	USERS_IMAGES_PATH NVARCHAR(MAX),
	USERS_PHONE NVARCHAR(MAX),
	USERS_ROLE INT NOT NULL,
	CONSTRAINT FK_USERS_ROLES FOREIGN KEY (USERS_ROLE) REFERENCES ROLES (ROLES_ID)
);
SELECT * FROM USERS U INNER JOIN ROLES R ON U.USERS_ROLE = R.ROLES_ID WHERE R.ROLES_ID = 1;
INSERT INTO USERS VALUES (N'TARIQ MEHMOOD', N'123123123123', N'12312312', N'IMAGE PATH HERE', N'034234234', 1);

CREATE TABLE COURSES (
	COURSES_ID INT NOT NULL PRIMARY KEY IDENTITY (1, 1),
	COURSES_TITLE NVARCHAR(MAX) NOT NULL,
	COURSES_DESCRIPTION NVARCHAR(MAX) NOT NULL,
	COURSES_DUES NVARCHAR(MAX) NOT NULL,
	CREATED_DATE NVARCHAR(MAX) NOT NULL,
	COURSES_DISCOUNT INT,
	CREATED_BY INT NOT NULL,
	CONSTRAINT FK_COURSES_USERS FOREIGN KEY (CREATED_BY) REFERENCES USERS (USERS_ID),
);

INSERT INTO COURSES VALUES (N'Data Structure and algorithms', 
N'React is a free and open-source front-end JavaScript library for building user interfaces based on components. It is maintained by Meta and a community of individual developers and companies. React can be used to develop single-page, mobile, or server-rendered applications with frameworks like Next.js.',
N'80,000', N'01/11/2023', 7, 1);

CREATE TABLE APPLICATION_FORMS (
	FORMS_ID INT NOT NULL PRIMARY KEY IDENTITY (1, 1),
	FORMS_USERNAME NVARCHAR(MAX) NOT NULL,
	FORMS_EMAIL NVARCHAR(100) UNIQUE NOT NULL,
	FORMS_DOB NVARCHAR(MAX) NOT NULL,
	FORMS_STUDENT_IMAGES NVARCHAR(MAX),
	FORMS_QUALIFICATIONS NVARCHAR(MAX) NOT NULL,
	FORMS_STUDENT_FATHER_NAMES NVARCHAR(MAX) NOT NULL,
	FORMS_STUDENT_ADDRESS NVARCHAR(MAX) NOT NULL,
	FORMS_STUDENT_COURSE_ID INT NOT NULL,
	FORMS_STUDENT_PHONES NVARCHAR(50) NOT NULL,
	FORMS_STUDENT_FATHER_PHONES NVARCHAR(50) NOT NULL,
	FORMS_TIMINGS NVARCHAR(MAX) NOT NULL,
	FORMS_OFFICE_FEES INT,
	FORMS_DISCOUNT INT,
	FORMS_USERS_ID INT NOT NULL,
	CONSTRAINT FK_STUDENT_COURSE_ID FOREIGN KEY (FORMS_STUDENT_COURSE_ID) REFERENCES COURSES (COURSES_ID),
	CONSTRAINT FK_APPLICATION_USERS FOREIGN KEY (FORMS_USERS_ID) REFERENCES USERS (USERS_ID), 
);

SELECT * FROM APPLICATION_FORMS AF
	INNER JOIN USERS U ON AF.FORMS_USERS_ID = U.USERS_ID
	INNER JOIN COURSES C ON AF.FORMS_STUDENT_COURSE_ID = C.COURSES_ID;

SELECT * FROM USERS;